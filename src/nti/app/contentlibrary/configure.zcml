<!-- -*- mode: nxml -*- -->
<configure	xmlns="http://namespaces.zope.org/zope"
			xmlns:i18n="http://namespaces.zope.org/i18n"
			xmlns:ext="http://nextthought.com/ntp/ext"
			xmlns:zcml="http://namespaces.zope.org/zcml">

	<include package="zope.component" file="meta.zcml" />
	<include package="zope.security" file="meta.zcml" />
	<include package="zope.component" />
	<include package="zope.security" />

	<include package="nti.contentlibrary" />

	<include package=".views" />
	<include package=".policies" />
	<include package=".appserver" />
	<include package=".content_unit_preferences" />

	<utility factory=".generations.install._SchemaManager"
			 name="nti.dataserver-app-contentlibrary"
			 provides="zope.generations.interfaces.IInstallableSchemaManager" />

	<!-- Events -->
	<subscriber handler=".logon._on_openid_user_created" />

	<!-- NTIID Resolvers -->
	<utility factory=".ntiids._ContentResolver" name="HTML" />
	<utility factory=".ntiids._ContentResolver" name="Root" />

	<!-- ACL -->
	<adapter factory=".acl._ContentPackageLibraryACLProvider" />
	<adapter factory=".acl._RenderableContentPackageACLProvider" />
	<adapter factory=".acl._ContentPackageBundleLibraryACLProvider" />
	<adapter factory=".acl._DelimitedHierarchyContentUnitACLProvider" />
	<adapter factory=".acl._DelimitedHierarchyContentPackageACLProvider" />

	<adapter factory=".acl._TestingLibraryTOCEntryACLProvider"
			 zcml:condition="have testmode" />


	<configure zcml:condition="installed nti.contenttypes.courses">
		<!-- Permissions cache -->
		<subscriber handler="._courses._on_enroll_record" />
		<subscriber handler="._courses._on_unenroll_record" />

		<!-- Catalog -->
		<subscriber factory="._courses._CourseContentUnitAssociations"
					provides="nti.contentlibrary.interfaces.IContentUnitAssociations"
					for="nti.contentlibrary.interfaces.IContentUnit" />

	</configure>

	<!-- Workspaces/collections -->
	<include package=".workspaces" />

	<!--
		 Cache ACLs for things from boto directly (previously, we were
		 caching the string value)
	-->
	<class class="nti.contentlibrary.boto_s3.BotoS3ContentUnit">
		<implements interface="nti.dataserver.interfaces.IACLProviderCacheable" />
	</class>

	<!-- Forum support -->
	<adapter factory=".forum.ContentBoardAdapter"
			 for="nti.contentlibrary.interfaces.IContentPackageBundle" />

	<subscriber handler=".subscribers._on_content_pacakge_library_synced" />

	<subscriber factory=".forum.ContentBoardLinkDecorator"
				provides="nti.externalization.interfaces.IExternalMappingDecorator"
				for="nti.contentlibrary.interfaces.IContentPackageBundle" />

	<adapter factory=".forum._ContentBoardACLProvider" />
	<adapter factory=".forum._ContentForumACLProvider" />

	<!-- Traversal to the forum objects -->
	<adapter factory="nti.traversal.traversal.DefaultAdapterTraversable"
			 for="nti.contentlibrary.interfaces.IContentPackageBundle pyramid.interfaces.IRequest" />

	<adapter factory="nti.traversal.traversal.DefaultAdapterTraversable"
			 for="nti.contentlibrary.interfaces.IContentPackageBundle" />

	<adapter factory=".forum.ContentBoardAdapter"
			 for="nti.contentlibrary.interfaces.IContentPackageBundle"
			 provides="zope.traversing.interfaces.IPathAdapter"
			 name="DiscussionBoard" /> <!-- matches __default_name__ -->

	<adapter factory=".adapters.bundle_to_principal"
			 for="nti.contentlibrary.interfaces.IContentPackageBundle"
			 provides="zope.security.interfaces.IPrincipal" />

	<!-- Externalization -->
	<!-- Note that we want to use the externalization already present, we just need the
	correct factories registered -->
	<include package="nti.externalization" file="meta.zcml" />
	<include package="nti.externalization" />

	<ext:registerMimeFactories module=".forum" />

	<!-- Decorators -->
	<include package=".decorators" />

	<!-- Adapters & Subscribers -->
	<adapter factory=".renderers._ContentUnitInfoCacheController" />

	<adapter factory=".adapters.presentation_asset_items_factory"
			 for="nti.contentlibrary.interfaces.IContentUnit"
			 provides="nti.contenttypes.presentation.interfaces.IPresentationAssetContainer" />

	<adapter factory=".subscribers.ContentPackageRolePermissionManager"
				provides=".interfaces.IContentPackageRolePermissionManager" />

	<!-- Top-level/hierarchy -->
	<adapter factory=".adapters._content_unit_to_bundle" />

	<subscriber factory=".adapters._bundles_from_unit"
				provides="nti.appserver.interfaces.ITopLevelContainerContextProvider"
				for="nti.contentlibrary.interfaces.IContentUnit
						nti.dataserver.interfaces.IUser"/>

	<subscriber factory=".adapters._hierarchy_from_obj"
				provides="nti.appserver.interfaces.IHierarchicalContextProvider"
				for="*
					nti.dataserver.interfaces.IUser"/>

	<subscriber factory=".adapters._bundles_from_container_object"
				provides="nti.appserver.interfaces.IJoinableContextProvider"
				for="*"/>

	<subscriber factory=".adapters._bundles_from_post"
				provides="nti.appserver.interfaces.ITopLevelContainerContextProvider"
				for="nti.dataserver.contenttypes.forums.interfaces.IPost"/>

	<subscriber factory=".adapters._bundles_from_topic"
				provides="nti.appserver.interfaces.ITopLevelContainerContextProvider"
				for="nti.dataserver.contenttypes.forums.interfaces.ITopic"/>

	<subscriber factory=".adapters._bundles_from_forum"
				provides="nti.appserver.interfaces.ITopLevelContainerContextProvider"
				for="nti.dataserver.contenttypes.forums.interfaces.IForum"/>

	<!-- Content package modifications. -->
	<!-- addition -->
	<subscriber handler=".subscribers._update_indices_when_content_changes"
				for="nti.contentlibrary.interfaces.IContentPackage
					 zope.lifecycleevent.IObjectAddedEvent" />

	<subscriber handler=".subscribers._initialize_package_roles" />

	<!-- publishing -->
	<subscriber handler=".subscribers._on_content_package_rendered"
				for="nti.contentlibrary.interfaces.IRenderableContentPackage
					 nti.contentlibrary.interfaces.IContentPackageRenderedEvent" />

	<!-- mutation -->
	<subscriber handler=".subscribers._update_indices_when_content_changes"
				for="nti.contentlibrary.interfaces.IContentPackage
					 zope.lifecycleevent.IObjectModifiedEvent" />

	<subscriber handler=".subscribers._update_package_roles" />

	<!-- removal -->
	<subscriber handler=".subscribers._clear_index_when_content_removed"
				for="nti.contentlibrary.interfaces.IContentPackage
					 zope.lifecycleevent.IObjectRemovedEvent" />

	<subscriber handler=".subscribers._clear_index_when_content_unpublished"
				for="nti.contentlibrary.interfaces.IContentPackage
					 nti.coremetadata.interfaces.IObjectUnpublishedEvent" />

	<!-- Filters -->
	<subscriber	factory=".filters._LibraryContentObjectFilter"
				provides="nti.dataserver.interfaces.ICreatableObjectFilter"
				for="nti.dataserver.interfaces.IUser" />

	<!-- Search pacakge resolvers -->
	<utility factory=".search._DefaultRootPackageResolver" />

	<subscriber factory=".search._DefaultSearchPacakgeResolver"
				provides="nti.contentsearch.interfaces.ISearchPackageResolver"
				for="nti.dataserver.interfaces.IUser" />

	<subscriber factory=".search._ContentUnitSearchHitPredicate"
				provides="nti.contentsearch.interfaces.ISearchHitPredicate"
				for="nti.contentlibrary.interfaces.IContentUnit" />

	<subscriber factory=".search._SearchHitDecorator"
				for="nti.contentsearch.interfaces.IContentUnitSearchHit"
				provides="nti.externalization.interfaces.IExternalObjectDecorator"/>

	<!-- Resolving metadata, used in the implementation of links -->
	<adapter factory=".resolvers.ContentMetadataFromContentUnit" />

	<!-- Catalog -->
	<adapter factory=".catalog._asset_to_ntiid" />
	<adapter factory=".catalog._asset_to_target" />
	<adapter factory=".catalog._asset_to_namespace" />
	<adapter factory=".catalog._asset_to_containers" />
	<adapter factory=".catalog._asset_to_contained_type" />

	<!-- Externalization -->
	<ext:registerAutoPackageIO
		root_interfaces=".interfaces.IContentUnitContents"
		modules=".model" />

</configure>
